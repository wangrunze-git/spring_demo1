#spring.profiles.active=dev
spring.aop.proxy-target-class=false
spring.datasource.url=jdbc:mysql://localhost:3306/chapter5
spring.datasource.username=root
spring.datasource.password=wrz123
#spring boot默认使用其绑定的tomcat数据源
#最大等待连接中的数量，设0为没有限制
spring.datasource.tomcat.max-idle=10
#配置驱动类，spring boot会尽可能的判断数据源是什么，然后去匹配驱动类
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#最大连接活动数
spring.datasource.tomcat.max-active=50
#最大等待毫秒数，单位为ms，超过时间会出现错误信息
spring.datasource.tomcat.max-wait=10000
#数据库连接池初始化连接数
spring.datasource.dbcp2.initial-size=5
#---------------------dbcp2---------------------------
#指定数据库连接池的类型，这里使用dbcp2
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#最大等待连接中的数量，设0为没有限制
#spring.datasource.dbcp2.max-idle=0
#最大连接活动数
#spring.datasource.dbcp2.max-total=50
#最大等待毫秒数，单位为ms，超过时间会出错误信息
#spring.datasource.dbcp2.max-wait-millis=10000
#数据库连接池初始化连接数
#spring.datasource.dbcp2.initial-size=5
#----------------------配置JPA属性----------------------
#使用MySQL数据库方言
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#打印数据库SQL
spring.jpa.show-sql=true
#选择Hibernate数据定义语言（DDL）策略为update
spring.jpa.hibernate.ddl-auto=update
#----------------------mybatis配置映射文件和扫描别名----------------
#MyBatis映射文件通配
mybatis.mapper-locations=classpath:com/springboot/chapter11/mapper/*.xml
#MyBatis扫描别名包，和注解@Alias联用
mybatis.type-aliases-package=com.springboot.chapter11.pojo
#配置typeHandler的扫描包
mybatis.type-handlers-package=com.springboot.chapter11.typeHandler
#-----------------------mybatis其他配置----------------------------
#MyBatis配置文件，当你的配置比价复杂的时候，可以使用它
mybatis.config-location=classpath:mybatis/mybatis-config.xml
#配置MyBatis插件（拦截器）
#mybatis.configuration.interceptors=......
#配置MyBatis级联延迟加载属性配置
#mybatis.configuration.aggressive-lazy-loading=......
#日志配置
logging.level.root=info
logging.level.org.springframework=info
logging.level.org.org.mybatis=info
#-----------------------配置默认的隔离级别----------------------------
#tomcat数据源默认隔离级别
spring.datasource.tomcat.default-transaction-isolation=2
#dbcp2数据库连接池默认隔离级别
spring.datasource.dbcp2.default-transaction-isolation=2
#-----------------------配置Redis------------------------------------
#配置连接池属性
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=2000
#配置Redis服务器属性
spring.redis.port=6379
spring.redis.host=localhost
spring.redis.password=123456
#Redis连接超时时间，单位毫秒
spring.redis.timeout=1000
#-----------------------缓存配置-------------------------------------
#spring.cache.cache-names=
#缓存配置细节
#spring.cache.caffeine.spec=
#couchbase缓存超时时间，默认是永不超时
#spring.cache.couchbase.expiration=0ms
#配置ehcache缓存初始化文件路径
#spring.cache.ehcache.config=
#infinispan缓存配置文件
#spring.cache.infinispan.config=
#缓存配置文件
#spring.cache.jcache.config=
#jcache缓存提供者配置
#spring.cache.jcache.provider=
#-----------------------redis缓存配置--------------------------------
#是否允许Redis缓存空值
spring.cache.redis.cache-null-values=true 
#Redis的键前缀
#spring.cache.redis.key-prefix=
#缓存超时时间戳，配置为0则不设置超时时间
spring.cache.redis.time-to-live=60000ms
#是否启用Redis的键前缀
spring.cache.redis.use-key-prefix=false
#缓存类型
#spring.cache.type=
spring.cache.type=redis
spring.cache.cache-names=redisCache
#-----------------------MONGODB-------------------------------------
#用于签名的MongoDB数据库
#spring.data.mongodb.authentication-database=
#使用字段名策略
spring.data.mongodb.field-naming-strategy=
#GridFs（网格文件）数据库名称
#spring.data.mongodb.grid-fs-database=
#是否启用MongoDB关于JPA规范的编程
#spring.data.mongodb.repositories.type=auto
#MongoDB默认URI
#spring.data.mongodb.uri=mongodb://localhost/test
#数据库名称
#spring.data.mongodb.uri=mongodb://spring_test:123456@localhost:27017/springboot?authSource=spring_test
spring.data.mongodb.database=springboot
#MongoDB服务器，不能设置为URI
spring.data.mongodb.host=localhost
#MongoDB服务器端口，不能设置为URI
spring.data.mongodb.port=27017
#MongoDB服务器用户密码，不能设置为URI
spring.data.mongodb.password=123456
#MongoDB服务器用户名，不能设置为URI
spring.data.mongodb.username=root_test
#-----------------------MyBatis-------------------------------------
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
spring.mvc.format.date=yyyy-MM-dd
#-----------------------文件上传配置-------------------------------------
#是否启用Spring MVC多部分上传功能
spring.servlet.multipart.enabled=true
#将文件写入磁盘的与之。只可以使用后缀"MB"或"KB"来表示兆字节或字节大小
spring.servlet.multipart.file-size-threshold=0
#指定默认上传的文件夹
spring.servlet.multipart.location=/Users/wangrunze/coding/tmp
#限制单个文件最大大小
spring.servlet.multipart.max-file-size=1MB
#限制所有文件最大大小
spring.servlet.multipart.max-request-size=10MB
#是否延迟多部分文件请求的参数和文件的解析
spring.servlet.multipart.resolve-lazily=false
#-----------------------配置pageHelper-------------------------------------
pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql
#-----------------------Spring Security配置-------------------------------------
#自定义用户名和密码
spring.security.user.name=myuser
spring.security.user.password=123456
#--------Pbkdf加密使用的私钥
system.user.password.secret=qweqwe
#-----------------------配置RabbitMQ-------------------------------------
#Rabbit MQ 配置
#Rabbit MQ 服务器地址
spring.rabbitmq.host=localhost
#Rabbit MQ 端口
spring.rabbitmq.port=5672
#RabbitMQ 用户
spring.rabbitmq.username=guest
#RabbitMQ密码
spring.rabbitmq.password=guest
#是否确认发送的消息已经被消费
spring.rabbitmq.publisher-confirm-type=correlated
#RabbitMQ 的消息队列名称，由它发送字符串(自己定义的）
rabbitmq.queue.msg=spring-boot-queue-msg
#RabbitMQ 的消息队列名称，由他发送用户对象(自己定义的）
rabbitmq.queue.user=spring-boot-queue-ser
spring.webflux.format.date=yyyy-MM-dd
spring.webflux.static-path-pattern=/static/**

